URLs are of the form:

http://www.camdram.net/show_manager/access?showid=123
http://www.camdram.net/shows/05/macbeth

etc.

These are matched by the rewriter in the following way (the mechanism isn't
exactly this, but this is a good way of thinking about it):

The title of every page in the database is converted to a "URL-friendly" form.
This involves making it all lowercase, replacing whitespace characters with
underscores, and removing all non-alphanumeric non-underscore non-slash characters.

Pages are then accessed based on their url-friendly name and their position in
the hierarchy. For example, a top-level page with title "boing" would be
accessed from any of the following URLs:

camdram.net/boing
camdram.net/boing?showid=123
camdram.net/boing/i_am_a_tomato

Note that "extra crap" after the page name is ignored. See later.

And if a page also existed with the name "flollop" and the parent property set
to the "boing" page, the following mapping would exist:

camdram.net/boing => boing
camdram.net/boing/flollop => flollop
camdram.net/boing/flollop/whee => flollop
camdram.net/boing/whee/flollop => boing

and so on. Umkay? Umkay.

Once the matching is complete, the rest of the URL is made available to the page
in the $extra_page_info variable. Hence there are 2 ways of making pages
appear in subdirectories when accessed by the user:

1. For pages with completely different code, make the different pages in the
database hierarchy as normal.
2. For pages generated by the same code, create one page and use
$extra_page_info to dynamically generate your content.

A real life example:

camdram.net/shows uses $extra_page_info to make camdram.net/shows/05/macbeth work.
camdram.net/show_manager/access?showid=123 is a page by itself with the name "show_manager/access".

Try to keep URLs sensible - if you're mixing and matching the 2 methods, you're
probably making stupid URLs. It is not necessary to turn every argument to
something that's obviously CGI into part of the URL -
camdram.net/show_manager/access/05/macbeth is getting silly, and doesn't
even make sense - a related page would be
camdram.net/show_manager/auditions/05/macbeth for example, but appears to be
in a completely different place in the tree...

One final rule - try not to change your URLs. If you do, you will probably need to add a .htaccess rule
to keep external links working.

Good luck,

Andrew

----
UPDATE January 2006 regarding 'virtual' and 'param_parser'

Hello, well yes, it's me (aes) again. There are now 2 new parameters in the database that affect how URLs
are parsed.

* Virtual

A 'virtual' page is one which is really another form/view of its parent. However, for some reason, it's been
implementented as a separate PHP file. Setting 'virtual' = 1 in the database tells camdram that you prefer not
to refer to it as a separate page, but rather append some CGI to the end of its parent in order to call it up.

Specifically, if you have a bage "badadong" (virtual=1) with the parent "mummydong", then "badadong" can be accessed
by http://www.camdram.net/complicated/hierarchy/mummydong?command=badadong.

* Param_parser

Param_parser is for implementing truly wide solutions where you want one page to be viewed if the user passes no
meaningful parameters to the page, and another to be viewed if meaningful parameters are passed. Specifically, it
was invented for shows:

/shows/ => a static disambiguation page
/shows/diary => diary page
/shows/archives => archives page
/shows/05/what_an_excellent_show => the show information page

In this example, /shows/ is a static page, /shows/diary and /shows/archives are 2 subpages, and the "view show" page
is a child of /shows/ with param_parser=1. If parameters are passed to /shows/, then /shows/view is displayed instead
of /shows/.

This is a bit wide. Be careful if you're planning to use it.